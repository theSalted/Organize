<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>41</string>
					<key>StartingColumnNumber</key>
					<string>21</string>
					<key>StartingLineNumber</key>
					<string>40</string>
					<key>Timestamp</key>
					<string>729716000.064808</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Organize/ContentView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>
</string>
				<key>leading</key>
				<string>                        // Present create item form on dismiss of reconstruction view
                        captureViewModel.showCreateForm = true
                    }</string>
				<key>trailing</key>
				<string>                } content: {
                    if let folderManager = objectCaptureModel.scanFolderManager {
                        ReconstructionPrimaryView(
</string>
			</dict>
			<key>title</key>
			<string>Todo: revisit needed on how to present create item form for capture view</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>31</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>30</string>
					<key>Timestamp</key>
					<string>729804853.105293</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Organize/Views/OrganizationTabViews/NavigationColumns/SideBarView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>            // TODO: Improve needed for the match algorithm in this computed property
</string>
				<key>leading</key>
				<string>            return spaces
        } else {
</string>
				<key>trailing</key>
				<string>            // -[ ] Better fuzzy match algorithm
            // -[ ] Implementation in generic of string extension
            return spaces.filter { space in
</string>
			</dict>
			<key>title</key>
			<string>Improve needed for the match algorithm in this computed property</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>38</string>
					<key>EndingLineNumber</key>
					<string>33</string>
					<key>StartingColumnNumber</key>
					<string>38</string>
					<key>StartingLineNumber</key>
					<string>33</string>
					<key>Timestamp</key>
					<string>729800931.516893</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Organize/Views/OrganizationTabViews/NavigationColumns/DetailsView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    
    init() {
        // TODO: SwiftUI bug Page Indi</string>
				<key>trailing</key>
				<string>cator TabView page style lightmode workaround
        // PageIndicator of TabViewStyle don't adopt to lightmode for some reason
        // manual implementation for lightmode
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>47</string>
					<key>EndingLineNumber</key>
					<string>27</string>
					<key>StartingColumnNumber</key>
					<string>47</string>
					<key>StartingLineNumber</key>
					<string>27</string>
					<key>Timestamp</key>
					<string>729804306.702902</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Organize/Views/OrganizationTabViews/NavigationColumns/ContentColumnView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string></string>
				<key>leading</key>
				<string>    }
    private var storagesList: [Storage] {
        // TODO: Improve needed for the match a</string>
				<key>trailing</key>
				<string>lgorithm in this computed property
        // -[ ] Better fuzzy match algorithm
        // -[ ] Implementation in generic of string extension
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>28</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>27</string>
					<key>Timestamp</key>
					<string>729804629.64656</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Organize/Views/OrganizationTabViews/NavigationColumns/DetailViews/StorageViews/SingleStorageDetailView.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>        // TODO: Improve needed for the match algorithm in this computed property
</string>
				<key>leading</key>
				<string>    }
    private var itemsList: [Item] {
</string>
				<key>trailing</key>
				<string>        // -[ ] Better fuzzy match algorithm
        // -[ ] Implementation in generic of string extension
        return items.filter { item in
</string>
			</dict>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
